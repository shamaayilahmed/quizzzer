{"version":3,"sources":["pocd.js","icdwa.js","daa.js","cn.js","se.js","wp.js","App.js","index.js"],"names":["questions","questionText","answerOptions","answerText","isCorrect","App","useState","state","setState","current","setCurrent","score","setScore","correct","setCorrect","className","type","id","onClick","window","location","reload","length","map","opt","disabled","sequestions","style","marginLeft","daaquestions","cnquestions","wpquestions","pocdquestions","icdwaquestions","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d46a49a.chunk.js","sourcesContent":["const questions = [\r\n  {\r\n    questionText: 'Which grammar causes recursive-descent parser to go into infinite loop?',\r\n    answerOptions: [\r\n      { answerText: 'LL(1)', isCorrect: false },\r\n      { answerText: 'Left Recursive Grammer', isCorrect: true },\r\n      { answerText: 'Right Recursive Grammer', isCorrect: false },\r\n      { answerText: 'Grammer with left factors', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'A rightmost derivation in reverse can be obtained by',\r\n    answerOptions: [\r\n      { answerText: 'prefixing', isCorrect: false },\r\n      { answerText: 'Handle pruning', isCorrect: true },\r\n      { answerText: 'Reduction', isCorrect: false },\r\n      { answerText: 'Shifting', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'Which of the following phases is accessed by almost all phases of compiler?',\r\n    answerOptions: [\r\n      { answerText: 'Symbol Table', isCorrect: true },\r\n      { answerText: 'Scanner', isCorrect: false },\r\n      { answerText: 'Code Generator', isCorrect: false },\r\n      { answerText: 'Parser', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'Data flow engines generate',\r\n    answerOptions: [\r\n      { answerText: 'Code generator', isCorrect: false },\r\n      { answerText: 'Syntax Analyzer', isCorrect: false },\r\n      { answerText: 'Specification of tokens', isCorrect: false },\r\n      { answerText: ' Code Optimizer', isCorrect: true },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'The most powerful LR Parser is',\r\n    answerOptions: [\r\n      { answerText: 'LALR', isCorrect: false },\r\n      { answerText: 'LL(1)', isCorrect: false },\r\n      { answerText: 'CLR', isCorrect: true },\r\n      { answerText: 'SLR', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'YACC is a',\r\n    answerOptions: [\r\n      { answerText: 'Lexical analyzer generator', isCorrect: false },\r\n      { answerText: 'Semantic analyzer', isCorrect: false },\r\n      { answerText: 'Parser generator', isCorrect: true },\r\n      { answerText: 'Code generator', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'In a compiler, grouping of characters into tokens is done by',\r\n    answerOptions: [\r\n      { answerText: 'Parser', isCorrect: false },\r\n      { answerText: 'Scanner', isCorrect: true },\r\n      { answerText: 'Code optimizer', isCorrect: false },\r\n      { answerText: 'Code generator', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'Peep - hole optimization is a form of',\r\n    answerOptions: [\r\n      { answerText: 'Constant folding', isCorrect: false },\r\n      { answerText: 'Loop optimization', isCorrect: false },\r\n      { answerText: 'Local optimization', isCorrect: true },\r\n      { answerText: 'Data flow analysis', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'Three address code involves',\r\n    answerOptions: [\r\n      {\r\n        answerText: 'At the most of 3 addresses', isCorrect: true\r\n      },\r\n      {\r\n        answerText: 'Exactly 3 addresses', isCorrect: false\r\n      },\r\n      {\r\n        answerText: 'greater than or equal to three addresses', isCorrect: false\r\n      },\r\n      { answerText: 'No unary operators', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'Type checking is normally done during',\r\n    answerOptions: [\r\n      { answerText: 'Code optimization', isCorrect: false },\r\n      { answerText: 'Lexical Analysis', isCorrect: false },\r\n      { answerText: 'Syntax analysis', isCorrect: false },\r\n      { answerText: 'Syntax Directed Translation', isCorrect: true },\r\n    ],\r\n  },\r\n\r\n  {\r\n    questionText: 'S -> (L) | a L -> L, S | S Find the FOLLOW(L)',\r\n    answerOptions: [\r\n      { answerText: '{ (}', isCorrect: false },\r\n      { answerText: '{) }', isCorrect: true },\r\n      { answerText: '{(,)}', isCorrect: false },\r\n      { answerText: `{$,',)}`, isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'One of the implementations of Three address statements is',\r\n    answerOptions: [\r\n      { answerText: 'Indirect triples', isCorrect: false },\r\n      { answerText: 'Postfix Notation', isCorrect: false },\r\n      { answerText: 'Syntax Trees', isCorrect: true },\r\n      {\r\n        answerText: 'Three address code', isCorrect: false\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'In Static allocation, the position of an activation record in memory is fixed at',\r\n    answerOptions: [\r\n      { answerText: 'program coding', isCorrect: false },\r\n      { answerText: 'compile time', isCorrect: true },\r\n      { answerText: 'program loading', isCorrect: false },\r\n      { answerText: 'execution time ', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'Which storage allocation strategy manages the run time storage',\r\n    answerOptions: [\r\n      { answerText: 'Stack Allocation', isCorrect: true },\r\n      { answerText: 'Static Allocation', isCorrect: false },\r\n      { answerText: 'Heap Allocation', isCorrect: false },\r\n      { answerText: 'Linking and Loading', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'Which of the following is considered as a sequence of characters in a token',\r\n    answerOptions: [\r\n      { answerText: 'Mexeme', isCorrect: false },\r\n      { answerText: 'Pattern', isCorrect: false },\r\n      { answerText: 'Lexeme', isCorrect: true },\r\n      { answerText: 'Texeme', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'Which of the following phase gives tokens as output',\r\n    answerOptions: [\r\n      { answerText: 'Intermediate code generation', isCorrect: false },\r\n      { answerText: 'Lexical analyzer', isCorrect: true },\r\n      { answerText: 'Syntax analyzer', isCorrect: false },\r\n      { answerText: 'Semantic analyzer', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'Macro expansion type parameter passing is otherwise called as',\r\n    answerOptions: [\r\n      { answerText: 'Call - by value', isCorrect: false },\r\n      { answerText: 'Call - by reference', isCorrect: false },\r\n      { answerText: 'Copy - restore', isCorrect: false },\r\n      { answerText: 'Call - by name', isCorrect: true },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'A basic block can be analyzed by',\r\n    answerOptions: [\r\n      { answerText: 'a DAG', isCorrect: true },\r\n      { answerText: 'a graph withcycles', isCorrect: false },\r\n      { answerText: 'Flow graph', isCorrect: false },\r\n      { answerText: 'Constant folding', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'Substitution of values for names whose values are constant is done in',\r\n    answerOptions: [\r\n      { answerText: 'Local optimization', isCorrect: false },\r\n      { answerText: 'Constant folding', isCorrect: true },\r\n      { answerText: 'Loop optimization', isCorrect: false },\r\n      { answerText: 'Data flow analysis', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'Which of the following implementations of three address codes occupy less space',\r\n    answerOptions: [\r\n      { answerText: 'Quadruples', isCorrect: false },\r\n      { answerText: 'Syntax tree', isCorrect: false },\r\n      { answerText: 'Triples', isCorrect: true },\r\n      { answerText: 'Indirect triples', isCorrect: false },\r\n    ],\r\n  }\r\n];\r\n\r\nexport default questions;","const questions = [\r\n  {\r\n    questionText: 'ICDWA',\r\n    answerOptions: [\r\n      { answerText: 'New York', isCorrect: false },\r\n      { answerText: 'London', isCorrect: false },\r\n      { answerText: 'Paris', isCorrect: true },\r\n      { answerText: 'Dublin', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'Who is CEO of Tesla?',\r\n    answerOptions: [\r\n      { answerText: 'Jeff Bezos', isCorrect: false },\r\n      { answerText: 'Elon Musk', isCorrect: true },\r\n      { answerText: 'Bill Gates', isCorrect: false },\r\n      { answerText: 'Tony Stark', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'The iPhone was created by which company?',\r\n    answerOptions: [\r\n      { answerText: 'Apple', isCorrect: true },\r\n      { answerText: 'Intel', isCorrect: false },\r\n      { answerText: 'Amazon', isCorrect: false },\r\n      { answerText: 'Microsoft', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'How many Harry Potter books are there?',\r\n    answerOptions: [\r\n      { answerText: '1', isCorrect: false },\r\n      { answerText: '4', isCorrect: false },\r\n      { answerText: '6', isCorrect: false },\r\n      { answerText: '7', isCorrect: true },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default questions;","const questions = [\r\n  {\r\n    questionText: 'DAA',\r\n    answerOptions: [\r\n      { answerText: 'New York', isCorrect: false },\r\n      { answerText: 'London', isCorrect: false },\r\n      { answerText: 'Paris', isCorrect: true },\r\n      { answerText: 'Dublin', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'Who is CEO of Tesla?',\r\n    answerOptions: [\r\n      { answerText: 'Jeff Bezos', isCorrect: false },\r\n      { answerText: 'Elon Musk', isCorrect: true },\r\n      { answerText: 'Bill Gates', isCorrect: false },\r\n      { answerText: 'Tony Stark', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'The iPhone was created by which company?',\r\n    answerOptions: [\r\n      { answerText: 'Apple', isCorrect: true },\r\n      { answerText: 'Intel', isCorrect: false },\r\n      { answerText: 'Amazon', isCorrect: false },\r\n      { answerText: 'Microsoft', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'How many Harry Potter books are there?',\r\n    answerOptions: [\r\n      { answerText: '1', isCorrect: false },\r\n      { answerText: '4', isCorrect: false },\r\n      { answerText: '6', isCorrect: false },\r\n      { answerText: '7', isCorrect: true },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default questions;","const questions = [\r\n  {\r\n    questionText: 'CN',\r\n    answerOptions: [\r\n      { answerText: 'New York', isCorrect: false },\r\n      { answerText: 'London', isCorrect: false },\r\n      { answerText: 'Paris', isCorrect: true },\r\n      { answerText: 'Dublin', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'Who is CEO of Tesla?',\r\n    answerOptions: [\r\n      { answerText: 'Jeff Bezos', isCorrect: false },\r\n      { answerText: 'Elon Musk', isCorrect: true },\r\n      { answerText: 'Bill Gates', isCorrect: false },\r\n      { answerText: 'Tony Stark', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'The iPhone was created by which company?',\r\n    answerOptions: [\r\n      { answerText: 'Apple', isCorrect: true },\r\n      { answerText: 'Intel', isCorrect: false },\r\n      { answerText: 'Amazon', isCorrect: false },\r\n      { answerText: 'Microsoft', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'How many Harry Potter books are there?',\r\n    answerOptions: [\r\n      { answerText: '1', isCorrect: false },\r\n      { answerText: '4', isCorrect: false },\r\n      { answerText: '6', isCorrect: false },\r\n      { answerText: '7', isCorrect: true },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default questions;","const questions = [\r\n  {\r\n    questionText: 'SE',\r\n    answerOptions: [\r\n      { answerText: 'New York', isCorrect: false },\r\n      { answerText: 'London', isCorrect: false },\r\n      { answerText: 'Paris', isCorrect: true },\r\n      { answerText: 'Dublin', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'Who is CEO of Tesla?',\r\n    answerOptions: [\r\n      { answerText: 'Jeff Bezos', isCorrect: false },\r\n      { answerText: 'Elon Musk', isCorrect: true },\r\n      { answerText: 'Bill Gates', isCorrect: false },\r\n      { answerText: 'Tony Stark', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'The iPhone was created by which company?',\r\n    answerOptions: [\r\n      { answerText: 'Apple', isCorrect: true },\r\n      { answerText: 'Intel', isCorrect: false },\r\n      { answerText: 'Amazon', isCorrect: false },\r\n      { answerText: 'Microsoft', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'How many Harry Potter books are there?',\r\n    answerOptions: [\r\n      { answerText: '1', isCorrect: false },\r\n      { answerText: '4', isCorrect: false },\r\n      { answerText: '6', isCorrect: false },\r\n      { answerText: '7', isCorrect: true },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default questions;","const questions = [\r\n  {\r\n    questionText: 'WP',\r\n    answerOptions: [\r\n      { answerText: 'New York', isCorrect: false },\r\n      { answerText: 'London', isCorrect: false },\r\n      { answerText: 'Paris', isCorrect: true },\r\n      { answerText: 'Dublin', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'Who is CEO of Tesla?',\r\n    answerOptions: [\r\n      { answerText: 'Jeff Bezos', isCorrect: false },\r\n      { answerText: 'Elon Musk', isCorrect: true },\r\n      { answerText: 'Bill Gates', isCorrect: false },\r\n      { answerText: 'Tony Stark', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'The iPhone was created by which company?',\r\n    answerOptions: [\r\n      { answerText: 'Apple', isCorrect: true },\r\n      { answerText: 'Intel', isCorrect: false },\r\n      { answerText: 'Amazon', isCorrect: false },\r\n      { answerText: 'Microsoft', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'How many Harry Potter books are there?',\r\n    answerOptions: [\r\n      { answerText: '1', isCorrect: false },\r\n      { answerText: '4', isCorrect: false },\r\n      { answerText: '6', isCorrect: false },\r\n      { answerText: '7', isCorrect: true },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default questions;","import React, { useState } from 'react';\r\nimport { FaLock } from 'react-icons/fa';\r\nimport { BiHome } from 'react-icons/bi';\r\n\r\nimport pocdquestions from './pocd';\r\nimport icdwaquestions from './icdwa';\r\nimport daaquestions from './daa';\r\nimport cnquestions from './cn';\r\nimport sequestions from './se';\r\nimport wpquestions from './wp';\r\n\r\nexport default function App() {\r\n\tconst [state, setState] = useState(null);\r\n\tconst [current, setCurrent] = useState(0);\r\n\tconst [score, setScore] = useState(false);\r\n\tconst [correct, setCorrect] = useState(0);\r\n\r\n\tconst handleClick = (isCorrect) => {\r\n\t\tif (isCorrect === true) {\r\n\t\t\tsetCorrect(correct + 1);\r\n\t\t}\r\n\t\tif (current + 1 < state.length) {\r\n\t\t\tsetCurrent(current + 1);\r\n\t\t} else {\r\n\t\t\tsetScore(true);\r\n\t\t}\r\n\t}\r\n\tif (state) {\r\n\t\treturn (\r\n\t\t\t<div className='app'>\r\n\t\t\t\t<button type='reset' id='home' onClick={() => window.location.reload()}><BiHome /></button>\r\n\t\t\t\t{/* HINT: replace \"false\" with logic to display the \r\n      score when the user has answered all the questions */}\r\n\t\t\t\t{score ? (\r\n\t\t\t\t\t<div className='score-section'>You scored {correct} out of {state.length}</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t\t\t<span>Question {current + 1}</span>/{state.length}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='question-text'>{state[current].questionText}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t\t\t{state[current].answerOptions.map((opt) => {\r\n\t\t\t\t\t\t\t\t\treturn <>\r\n\t\t\t\t\t\t\t\t\t\t<button onClick={() => handleClick(opt.isCorrect)}>{opt.answerText}</button>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn <>\r\n\t\t{/* <button type='reset' onClick={() => location.reload()}>HOME</button> */}\r\n\t\t<h1><i>Choose a subject</i></h1>\r\n\r\n\r\n\t\t<button type='button' className='subject' disabled onClick={() => setState(sequestions)}>Software Engineering <FaLock style={{ marginLeft: '35%' }} /></button>\r\n\t\t<br />\r\n\t\t<button type='button' className='subject' disabled onClick={() => setState(daaquestions)}>Algorithms <FaLock style={{ marginLeft: '62%' }} /></button>\r\n\t\t<br />\r\n\t\t<button type='button' className='subject' disabled onClick={() => setState(cnquestions)}>Computer Networks <FaLock style={{ marginLeft: '38%' }} /></button>\r\n\t\t<br />\r\n\t\t<button type='button' className='subject' disabled onClick={() => setState(wpquestions)}>Web Programming <FaLock style={{ marginLeft: '42%' }} /></button>\r\n\t\t<br />\r\n\t\t<button type='submit' className='subject' onClick={() => setState(pocdquestions)}>Compiler Design</button>\r\n\t\t<br />\r\n\t\t<button type='button' className='subject' disabled onClick={() => setState(icdwaquestions)}>Indian Constitution <FaLock style={{ marginLeft: '40%' }} /></button>\r\n\r\n\t\t<p><i>rest of the subjects to be unlocked soon</i></p>\r\n\t\t<a href=\"https://t.co/NnzHqWoGp4?amp=1\"><p className='pride'>Enjoyed em Let's <a href=\"https://t.co/NnzHqWoGp4?amp=1\r\n\"> Connect 🤞</a></p></a>\r\n\r\n\t</>\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}